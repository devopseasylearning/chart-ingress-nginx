

tcpServices:
  enabled: false
#  mappings:
#  - name: ssh
#    number: 22
#    namespace: mynamespace
#    service: myservice
#    targetPort: 22


ingressController:
  image: gcr.io/google_containers/nginx-ingress-controller
  version: "0.9.0-beta.11"
  ports:
  - name: http
    number: 80
  - name: https
    number: 443
  replicas: 2
#  class: myclass
#  namespace: mynamespace

defaultBackend:
  image: gcr.io/google_containers/defaultbackend
  version: "1.3"
  namespace:
  resources:
    memory: 20Mi
    cpu: 10m
  replicas: 1

ingressService:
  type: LoadBalancer
#  nodePorts:
#  - name: http
#    port: 8080
#    targetPort: 80
#    protocol: TCP
#  - name: https
#    port: 8443
#    targetPort: 443
#    protocol: TCP
  loadBalancerIP:
  externalName:


## Options for ConfigurationMap
## ref: https://github.com/kubernetes/ingress/blob/master/controllers/nginx/configuration.md#allowed-parameters-in-configuration-configmap
configuration:
#  proxyBodySize:
#  customHttpErrors:
#  disableAccessLog: "false"
#  disableIPv6: "false"
#  enableDynamicTLSRecords: "true"
#  enableUnderscoresInHeaders: "false"
#  enableVtsStatus: "false"
#  errorLogLevel:
#  gzipTypes: "text/html"
#  hsts: "false"
#  hstsIncludeSubdomains: "false"
#  hstsMaxAge: 86400
#  hstsPreload: "false"
#  ignoreInvalidHeaders: "true"
#  keepAlive: "75s"
#  loadBalance: "round_robin"
#  logFormatUpstream:
#  logFormatStream:
#  maxWorkerConnections:
  proxyBufferSize: 16k
#  proxyConnectTimeout: 15
#  proxyCookieDomain:
#  proxyCookiePath:
#  proxyReadTimeout: 600
#  proxySendTimeout: 600
#  retryNonIdempotent: "false"
#  serverNameHashBucketSize: 256
#  serverNameHashMaxSize:
#  proxyHeadersHashBucketSize:
#  proxyHeadersHashMaxSize:
#  serverTokens:
#  mapHashBucketSize:
#  sslBufferSize:
#  sslCiphers:
#  sslDHParam:
#  sslProtocols:
#  sslRedirect:
#  sslSessionCache:
#  sslSessionCacheSize:
#  sslSessionTickets:
#  sslSessionTimeout:
#  upstreamMaxFails:
#  upstreamFailTimeout:
#  useGzip:
#  useHttp2:
#  useProxyProtocol:
#  whitelistSourceRange:
#  workerProcesses:
#  limitConnZoneVariable:
#  proxySetHeaders:
#  addHeaders: